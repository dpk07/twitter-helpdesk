{"version":3,"sources":["components/list/List.js","components/layout/Landing.js","components/layout/Navbar.js","utils/setAuthToken.js","components/auth/Register.js","services/authService.js","components/auth/Login.js","services/twitterService.js","components/auth/TwitterLogin.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["Landing","Component","style","height","className","to","width","borderRadius","letterSpacing","setAuthToken","token","axios","defaults","headers","common","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","history","newUser","name","state","email","password","password2","props","post","then","res","push","catch","err","console","log","errors","nextProps","this","paddingLeft","noValidate","error","type","classnames","invalid","htmlFor","marginTop","Login","data","localStorage","setItem","jwt_decode","window","location","href","loginUser","auth","isAuthenticated","emailnotfound","passwordincorrect","tweets","i","text","user","profile_image_url_https","followers_count","friends_count","statuses_count","timestamp_ms","replies","List","handleTweetClick","tweet","selectedTweet","handleChange","handleEnterKey","keyCode","returnValue","reply","replyTweet","status","screen_name","in_reply_to_status_id","id_str","tweetData","oauth_token","getItem","oauth_token_secret","replyToTweet","message","handleLogout","removeItem","cursor","onClick","renderParentTweets","class","renderUserInfo","renderChildTweets","placeholder","onKeyUp","renderUser","src","getReplies","map","sort","a","b","Date","created_at","padding","gmtdate","localDate","toLocaleString","hours","getHours","minutes","getMinutes","key","TwitterLogin","onSuccess","response","json","getMentions","newTweet","tweetsMap","set","handleTweet","socket","openSocket","query","screenName","transports","upgrade","on","handleTweetFromStream","parentTweet","get","unshift","onFailed","alert","Map","disconnect","content","loginUrl","onFailure","requestTokenUrl","PrivateRoute","component","rest","render","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3528ac53.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { replyToTweet } from \"../../services/twitterService\";\r\nimport { logoutUser } from \"../../services/authService\";\r\nlet tweets = [];\r\nfor (let i = 0; i < 10; i++) {\r\n  tweets.push({\r\n    text: \"Hi Hello,May I ask for a favor?\",\r\n    id: i,\r\n    user: {\r\n      profile_image_url_https:\r\n        \"https://pbs.twimg.com/profile_images/1315196104091357197/qw8li8wC_normal.jpg\",\r\n      name: \"Deepak\" + i,\r\n      followers_count: 0,\r\n      friends_count: 0,\r\n      statuses_count: 49,\r\n    },\r\n    timestamp_ms: \"1602420674815\",\r\n    replies: [\r\n      {\r\n        text: \"Hi, Please tell me.\",\r\n        id: i,\r\n        timestamp_ms: \"1602420674815\",\r\n        user: {\r\n          profile_image_url_https:\r\n            \"https://pbs.twimg.com/profile_images/1315196104091357197/qw8li8wC_normal.jpg\",\r\n          name: \"Amazon\" + i,\r\n          followers_count: 0,\r\n          friends_count: 0,\r\n          statuses_count: 49,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n}\r\n\r\nexport default class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { selectedTweet: null, reply: \"\" };\r\n  }\r\n  handleTweetClick = (tweet) => {\r\n    this.setState({ selectedTweet: tweet });\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleEnterKey = (e) => {\r\n    if (e.keyCode == 13) {\r\n      // enter pressed\r\n      debugger;\r\n      try {\r\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\r\n\r\n        let { reply, selectedTweet } = this.state;\r\n        let replyTweet = {\r\n          status: reply + \" @\" + selectedTweet.user.screen_name,\r\n          in_reply_to_status_id: \"\" + selectedTweet.id_str,\r\n        };\r\n        replyToTweet(replyTweet);\r\n        console.log(replyTweet);\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  };\r\n  handleLogout = () => {\r\n    logoutUser();\r\n  };\r\n  render() {\r\n    const { reply } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row marginBottom0\">\r\n          <h5 className=\"left conversationHeading\">Conversations</h5>\r\n          <h6\r\n            className=\"right conversationHeading\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={this.handleLogout}\r\n          >\r\n            Logout\r\n          </h6>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s3 parentWrapper\">\r\n            {renderParentTweets(this.props.tweets, this.handleTweetClick)}\r\n          </div>\r\n\r\n          <div className=\"col s9 conversationWrapper\">\r\n            <div class=\"row marginBottom0\" style={{ height: \"87vh\" }}>\r\n              <div className=\"col s8 leftContainer\">\r\n                <div className=\"row marginBottom0\" style={{ height: \"85%\" }}>\r\n                  {this.state.selectedTweet &&\r\n                    renderUserInfo(this.state.selectedTweet.user)}\r\n                  {renderChildTweets(this.state.selectedTweet)}\r\n                </div>\r\n\r\n                <div class=\"input-field col s6\" style={{ width: \"100%\" }}>\r\n                  <input\r\n                    value={reply}\r\n                    id=\"reply\"\r\n                    name=\"reply\"\r\n                    placeholder=\"Reply\"\r\n                    type=\"text\"\r\n                    class=\"validate\"\r\n                    onChange={this.handleChange}\r\n                    onKeyUp={this.handleEnterKey}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col s4\">\r\n                {this.state.selectedTweet &&\r\n                  renderUser(this.state.selectedTweet.user)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst renderUserInfo = (user) => {\r\n  return (\r\n    <div className=\"valign-wrapper marginBottom0 parentTweet\">\r\n      <div className=\"col s1 valign-wrapper\">\r\n        <img className=\"image\" src={user.profile_image_url_https} />\r\n      </div>\r\n      <div className=\"col s11\">\r\n        <span className=\"left\">{user.name}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderChildTweets = (tweet) => {\r\n  if (!tweet) return;\r\n  let tweets = [];\r\n  tweets.push(tweet);\r\n  const getReplies = (tweet) => {\r\n    if (tweet.replies) {\r\n      tweets.push(...tweet.replies);\r\n      tweet.replies.map((reply) => getReplies(reply));\r\n    }\r\n  };\r\n  getReplies(tweet);\r\n  if (!tweets) return;\r\n  tweets.sort((a, b) => {\r\n    return new Date(a.created_at) - new Date(b.created_at);\r\n  });\r\n  console.log(tweets);\r\n  return (\r\n    <ul style={{ padding: \"0.5rem\" }}>\r\n      {tweets.map((tweet) => {\r\n        const gmtdate = new Date(tweet.created_at);\r\n        const localDate = new Date(gmtdate.toLocaleString());\r\n        const hours = localDate.getHours();\r\n        const minutes = localDate.getMinutes();\r\n        return (\r\n          <div>\r\n            <li key={tweet.id} className=\"parentTweet\">\r\n              <div className=\"row valign-wrapper marginBottom0\">\r\n                <div className=\"col s1 valign-wrapper\">\r\n                  <img\r\n                    className=\"image\"\r\n                    src={tweet.user.profile_image_url_https}\r\n                  />\r\n                </div>\r\n                <div className=\"col s9\">\r\n                  <span className=\"left left-align\">{tweet.text}</span>\r\n                </div>\r\n                <div className=\"col s2\">\r\n                  <span className=\"left textGrey left-align\">{`${hours}:${minutes}`}</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            {/* {renderTweets(tweet.replies)} */}\r\n          </div>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst renderParentTweets = (tweets, handleTweetClick) => {\r\n  if (!tweets) return;\r\n  return (\r\n    <ul>\r\n      {tweets.map((tweet) => (\r\n        <div>\r\n          <li\r\n            onClick={() => handleTweetClick(tweet)}\r\n            key={tweet.id}\r\n            className=\"parentTweet\"\r\n          >\r\n            <div className=\"row valign-wrapper marginBottom0\">\r\n              <div className=\"col s2 valign-wrapper\">\r\n                <img\r\n                  className=\"image\"\r\n                  src={tweet.user.profile_image_url_https}\r\n                />\r\n              </div>\r\n              <div className=\"col s10\">\r\n                <span className=\"left\">{tweet.user.name}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"row marginBottom0\">\r\n              <div className=\"col s10 push-s2\">\r\n                <span className=\"left textGrey left-align\">{tweet.text}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          {/* {renderTweets(tweet.replies)} */}\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst renderUser = (user) => {\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: \"1rem\" }}>\r\n      <div className=\"row marginBottom0\">\r\n        <img className=\"profileImage\" src={user.profile_image_url_https} />\r\n      </div>\r\n      <div className=\"row marginBottom0\">{user.name}</div>\r\n      <div className=\"row marginBottom0\">\r\n        <table className=\"responsive-table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Followers</td>\r\n              <td>{user.followers_count}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Friends</td>\r\n              <td>{user.friends_count}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Statuses</td>\r\n              <td>{user.statuses_count}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>Twitter</b> Helpdesk{\" \"}\r\n            </h4>\r\n            <p className=\"flow-text grey-text text-darken-1\">\r\n              Use this helpdesk to get a unified views of your tweets and reply\r\n              to them.\r\n            </p>\r\n            <br />\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/register\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\",\r\n                }}\r\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/login\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\",\r\n                }}\r\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\r\n              >\r\n                Log In\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                fontFamily: \"monospace\"\r\n              }}\r\n              className=\"col s5 brand-logo center black-text\"\r\n            >\r\n              <i className=\"material-icons\">code</i>\r\n              MERN\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;","import axios from \"axios\";\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { registerUser } from \"../../services/authService\";\r\nimport classnames from \"classnames\";\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    registerUser(newUser, this.props.history); \r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Register</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Already have an account? <Link to=\"/login\">Log in</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.name}\r\n                  error={errors.name}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.name\r\n                  })}\r\n                />\r\n                <label htmlFor=\"name\">Name</label>\r\n                <span className=\"red-text\">{errors.name}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">{errors.email}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">{errors.password}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password2\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password2\">Confirm Password</label>\r\n                <span className=\"red-text\">{errors.password2}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nexport default Register;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n// Register User\r\nexport const registerUser = (userData, history) => {\r\n  axios\r\n    .post(\"/users/register\", userData)\r\n    .then((res) => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch((err) => console.log(err));\r\n};\r\n// Login - get user token\r\nexport const loginUser = (userData) => {\r\n  axios\r\n    .post(\"/users/login\", userData)\r\n    .then((res) => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      window.location.href = \"/list\";\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n  localStorage.setItem(\"user\", decoded);\r\n};\r\n// Log user out\r\nexport const logoutUser = () => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  localStorage.removeItem(\"oauth_token\");\r\n  localStorage.removeItem(\"oauth_token_secret\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  window.location.href = \"/\";\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { loginUser } from \"../../services/authService\";\r\nimport classnames from \"classnames\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n    }\r\nif (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Login</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nexport default Login;","import Axios from \"axios\";\r\nimport axios from \"axios\";\r\nexport const replyToTweet = (tweet) => {\r\n  const oauth_token = localStorage.getItem(\"oauth_token\");\r\n  const oauth_token_secret = localStorage.getItem(\"oauth_token_secret\");\r\n  const tweetData = {\r\n    oauth_token,\r\n    oauth_token_secret,\r\n    tweet,\r\n  };\r\n  axios.post(\"/auth/twitter/reply\", tweetData).then((data) => {\r\n    console.log(data);\r\n  });\r\n};\r\n\r\nexport const getMentions = () => {\r\n  const oauth_token = localStorage.getItem(\"oauth_token\");\r\n  const oauth_token_secret = localStorage.getItem(\"oauth_token_secret\");\r\n  const tweetData = {\r\n    oauth_token,\r\n    oauth_token_secret,\r\n  };\r\n  return axios\r\n    .post(\"/auth/twitter/getRecentMentions\", tweetData)\r\n    .then((data) => data.data);\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"oauth_token\");\r\n  localStorage.removeItem(\"oauth_token_secret\");\r\n  this.setState({ isAuthenticated: false, token: \"\", user: null });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport TwitterLoginAuth from \"react-twitter-auth\";\r\nimport openSocket from \"socket.io-client\";\r\nimport List from \"../list/List\";\r\nimport { getMentions } from \"../../services/twitterService\";\r\nclass TwitterLogin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.socket = null;\r\n    this.state = { isAuthenticated: false, user: null, token: \"\", tweets: [] };\r\n    this.tweetsMap = new Map();\r\n  }\r\n  componentWillUnmount() {\r\n    this.socket.disconnect();\r\n    this.socket = null;\r\n  }\r\n\r\n  onSuccess = (response) => {\r\n    debugger;\r\n    console.log(response);\r\n    response.json().then((res) => {\r\n      debugger;\r\n      console.log(res);\r\n      this.setState({ isAuthenticated: true });\r\n      localStorage.setItem(\"oauth_token\", res.oauth_token);\r\n      localStorage.setItem(\"oauth_token_secret\", res.oauth_token_secret);\r\n      getMentions().then((data) => {\r\n        data.map((newTweet) => this.tweetsMap.set(newTweet.id, newTweet));\r\n        data.map(this.handleTweet);\r\n      });\r\n      if (this.socket == null) {\r\n        this.socket = openSocket(\"http://localhost:5000\", {\r\n          query: {\r\n            screenName: res.screen_name,\r\n          },\r\n          transports: [\"websocket\"],\r\n          upgrade: false,\r\n        });\r\n        this.socket.on(\"tweet\", this.handleTweetFromStream);\r\n      }\r\n    });\r\n  };\r\n  handleTweetFromStream = (newTweet) => {\r\n    console.log(newTweet);\r\n    this.tweetsMap.set(newTweet.id, newTweet);\r\n    let tweets = this.state.tweets;\r\n    if (!newTweet.in_reply_to_status_id) tweets.unshift(newTweet);\r\n    else {\r\n      let parentTweet = this.tweetsMap.get(newTweet.in_reply_to_status_id);\r\n      if (parentTweet)\r\n        if (parentTweet.replies) {\r\n          parentTweet.replies.push(newTweet);\r\n        } else {\r\n          parentTweet.replies = [newTweet];\r\n        }\r\n    }\r\n    this.setState({ tweets }, () => console.log(\"state\", this.state));\r\n  };\r\n\r\n  handleTweet = (newTweet) => {\r\n    console.log(newTweet);\r\n    this.tweetsMap.set(newTweet.id, newTweet);\r\n    let tweets = this.state.tweets;\r\n    if (!newTweet.in_reply_to_status_id) tweets.push(newTweet);\r\n    else {\r\n      let parentTweet = this.tweetsMap.get(newTweet.in_reply_to_status_id);\r\n      if (parentTweet)\r\n        if (parentTweet.replies) {\r\n          parentTweet.replies.push(newTweet);\r\n        } else {\r\n          parentTweet.replies = [newTweet];\r\n        }\r\n    }\r\n    this.setState({ tweets }, () => console.log(\"state\", this.state));\r\n  };\r\n  onFailed = (error) => {\r\n    alert(error);\r\n  };\r\n\r\n  render() {\r\n    let content = !!this.state.isAuthenticated ? (\r\n      <div>\r\n        <List tweets={this.state.tweets}></List>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <TwitterLoginAuth\r\n          loginUrl=\"http://localhost:5000/auth/twitter\"\r\n          onFailure={this.onFailed}\r\n          onSuccess={this.onSuccess}\r\n          requestTokenUrl=\"http://localhost:5000/auth/twitter/reverse\"\r\n          style={{ marginTop: \"3rem\" }}\r\n        />\r\n      </div>\r\n    );\r\n\r\n    return <div className=\"App\">{content}</div>;\r\n  }\r\n}\r\n\r\nexport default TwitterLogin;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const auth = localStorage.getItem(\"jwtToken\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        auth ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport TwitterLogin from \"./components/auth/TwitterLogin\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport \"./App.css\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute exact path=\"/list\" component={TwitterLogin} />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}